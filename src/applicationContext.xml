<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd	
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd"
	default-lazy-init="false" default-autowire="byName">
	
	<context:property-placeholder location="classpath:config.properties"/>  
	<!-- 应用属性文件读入
	<bean id="applicationProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>
	 -->
	
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">  
		<property name="driverClassName" value="${jdbc_Driver}" />
        <property name="url" value="${jdbc_Url}"/> 
		<property name="username" value="${jdbc_name}" />
		<property name="password" value="${jdbc_pwd}" />
		<property name="maxActive" value = "50" />
		<property name="maxIdle" value="10" />
		<property name="maxWait" value="50" />
		<property name="defaultAutoCommit" value="true" />
	</bean>
	
	<!-- 配置jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 配置事务 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
    <!--  配置一个事务的注解驱动-->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- <context:property-placeholder location="classpath*:weipay-wc.properties" ignore-unresolvable="true"/>
	
	<bean id="qiniuClient" class="com.jeebey.weipay.spring.WeipayClientFactoryBean">
		<property name="certFilename" value="${wechat.cert.filename}"/>
		<property name="certPassword" value="${wechat.cert.password}"/>
	</bean> -->
	<!--
	 配置事物传播行为 
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor"
		p:transactionManager-ref="txManager">
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="query*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="select*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED,-java.lang.Exception</prop>
			</props>
		</property>
	</bean>
	
	 配置哪些类的哪些方法参与事务 
	<bean id="ProxyCreator"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator"
		p:beanNames="*Service,*ServiceImpl" p:interceptorNames="transactionInterceptor" >
	</bean>
	-->
	
	<!-- 激活 @Required @Autowired,JSR 250's @PostConstruct, @PreDestroy and @Resource 
		等标注 -->
	<context:annotation-config />
	
	<context:component-scan base-package="com.vdong">
		<context:exclude-filter type="regex"
			expression="com.vdong.Contrller" />
	</context:component-scan>
	<!--     spring 定时器  暂时不需要
	
	
	
	 定时装置所要执行的任务所在的类 
        <bean id="quartzJob" class="org.icbc.util.QuartzJob"></bean>
          引用任务描述 
        <bean id="jobtask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
            <property name="targetObject">
              引用任务方法所在的类 
                <ref bean="quartzJob"/>
            </property>
            <property name="targetMethod">
                指定任务方法名称 
                <value>work</value>
            </property>
            <property name="concurrent"><value>false</value></property>
        </bean>
           配置触发器 
        <bean id="doTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
  这里不可以直接在属性jobDetail中引用taskJob，因为他要求的是一个jobDetail类型的对象，所以我们得通过MethodInvokingJobDetailFactoryBean来转一下         
            <property name="jobDetail">
                引用任务描述bean 
                <ref bean="jobtask"/>
            </property>
            <property name="cronExpression">
                <value>0 0 10,13,18 * * ?</value>
            </property>
        </bean>
        
        
        
       
        <bean id="QuartzJobToYy" class="org.icbc.util.QuartzJobToYy"></bean>
        <bean id="jobtask2" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
            <property name="targetObject">
                <ref bean="QuartzJobToYy"/>
            </property>
            <property name="targetMethod">
                <value>work</value>
            </property>
            <property name="concurrent"><value>false</value></property>
        </bean>
           配置触发器 
        <bean id="doTime2" class="org.springframework.scheduling.quartz.CronTriggerBean">
  这里不可以直接在属性jobDetail中引用taskJob，因为他要求的是一个jobDetail类型的对象，所以我们得通过MethodInvokingJobDetailFactoryBean来转一下         
            <property name="jobDetail">
                引用任务描述bean 
                <ref bean="jobtask2"/>
            </property>
            <property name="cronExpression">
                <value>0 */2 * * * ? </value>
            </property>
        </bean>
        
        
        
           配置任务工厂, 只能有一个这种bean 
        <bean id="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
                  添加触发器          
             <property name="triggers">
                <list>
                    <ref bean="doTime"/>
                     <ref bean="doTime2"/>
                </list>
            </property>
        </bean>
-->
</beans>